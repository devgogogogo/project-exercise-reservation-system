# docker-compose.yml
services:
  # ✅ Spring Boot Application
  app:
    build: .                         # ← 이 폴더에 Dockerfile이 있어야 함
    container_name: spring-app
    ports:
      - "8080:8080"                  # 컨테이너 → 로컬 접근 가능
    depends_on:
      - mysql
      - redis
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/exercise_reservation
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    restart: always
  mysql:
    image: mysql:8.0
    container_name: mysql-exercise
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: exercise_reservation
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3309:3306"
    command: >
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --default-authentication-plugin=mysql_native_password
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-u", "root", "-proot"]
      interval: 5s
      timeout: 3s
      retries: 20

  redis:
    image: redis:7-alpine
    container_name: redis-exercise
    ports:
      - "6379:6379"
    command: [ "redis-server", "--appendonly", "yes" ]
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 20

  # ✅ k6 성능 테스트용 추가
  k6:
    image: grafana/k6:latest
    container_name: k6-test
    volumes:
      - ./k6:/scripts              # test.js 파일이 들어있는 폴더
    entrypoint: [ "tail", "-f", "/dev/null" ]  # 기본은 대기 모드로 실행
    depends_on:
      - mysql
      - redis
volumes:
  mysql_data:
  redis_data: